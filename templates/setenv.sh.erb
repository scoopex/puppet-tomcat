<%
def get_var(value, regex)
  if ( value =~ regex )
    return value
  else
     raise ArgumentError, ">>>#{value}<<< does not match to regex >>>#{regex}<<< : #{caller[0]}"
  end
end
-%>
echo "LOADING <%= get_var(@deploymentdir, /\/.+/) %>/bin/setenv.sh"

# unset DISPLAY to enforce java headless mode
unset DISPLAY

JAVA_MAJOR_VERSION=$(java -version 2>&1 | sed -E -n 's/.* version "([^.-]*).*"/\1/p' | cut -d' ' -f1)
if [ -z "$JAVA_MAJOR_VERSION" ];then
   echo "ERROR: unable to detect java major release"
   exit 1
fi

export TOMCAT_LOGDIR="<%= get_var(@deploymentdir, /\/.+/) %>/logs"
 
# cleanup tempdir
export CATALINA_TMPDIR=${TOMCAT_LOGDIR}/temp

if [ -d "$CATALINA_TMPDIR" ];then
<% if @template_params['cleanup_tempdir'] == 'true' %>
  echo "CLEANUP CATALINA_TMPDIR $CATALINA_TMPDIR/*"
  rm $CATALINA_TMPDIR/* 2>/dev/null
<% else %>
  echo "CATALINA_TMPDIR $CATALINA_TMPDIR EXISTS"
<% end %>
else
  echo "CREATING CATALINA_TMPDIR $CATALINA_TMPDIR"
  mkdir -p $CATALINA_TMPDIR
fi
 
# clean up work dir (i.e. serialized sessions)
export CATALINA_WORKDIR=${TOMCAT_LOGDIR}/work
if [ -d "$CATALINA_WORKDIR" ];then
<% if @template_params['cleanup_workdir'] == 'true' %>
  echo "CLEANUP CATALINA_WORKDIR $CATALINA_WORKDIR/*"
  rm -$CATALINA_WORKDIR/* 2>/dev/null
<% else %>
  echo "CATALINA_WORKDIR $CATALINA_WORKDIR EXISTS"
<% end %>
else
  echo "CREATING CATALINA_WORKDIR $CATALINA_WORKDIR"
  mkdir -p $CATALINA_WORKDIR
fi
 
# Memory Options
# (its a good idea to size minheap == maxheap)
JAVA_OPTS="$JAVA_OPTS <%= get_var(@javaheapopts, /-Xms.+.*-Xmx.+/) %> "
 
# Optimize Hotspot
JAVA_OPTS="$JAVA_OPTS -server"
 
# JAVA HEAP SETTINGS
if [ "$1" = "start" ];then
   echo "adding gclog options for java major release $JAVA_MAJOR_VERSION"
   if [ "$JAVA_MAJOR_VERSION" -lt 10 ];then
      JAVA_OPTS="$JAVA_OPTS -verbose:gc -Xloggc:${TOMCAT_LOGDIR}/java_gc.log -XX:+UseGCLogFileRotation -XX:NumberOfGCLogFiles=5 -XX:GCLogFileSize=10M"
      JAVA_OPTS="$JAVA_OPTS -XX:+PrintGCDetails -XX:+PrintGCDateStamps -XX:+PrintHeapAtGC"
      JAVA_OPTS="$JAVA_OPTS -XX:+PrintGCTimeStamps -XX:+PrintTenuringDistribution -XX:+PrintGCApplicationConcurrentTime -XX:+PrintGCApplicationStoppedTime"
   else
      # https://dzone.com/articles/disruptive-changes-to-gc-logging-in-java-9
      JAVA_OPTS="$JAVA_OPTS -Xlog:gc*:file=${TOMCAT_LOGDIR}/gc.%t_%p.log:time:filecount=5:filesize=30720:task=trace:heap=debug:age=trace:safepoint"
   fi
fi

if [ "$1" = "start" ];then
   JAVA_OPTS="$JAVA_OPTS -Dcom.sun.management.jmxremote -Dcom.sun.management.jmxremote.port=<%= get_var(@port_prefix, /^\d+$/) %><%= get_var(@port_sub_prefix,/^\d+$/) %>999 -Dcom.sun.management.jmxremote.ssl=false"
    JAVA_OPTS="$JAVA_OPTS -Dcom.sun.management.jmxremote.authenticate=true"
    JAVA_OPTS="$JAVA_OPTS -Dcom.sun.management.jmxremote.password.file=<%= get_var(@deploymentdir,/.+/) %>/conf/jmxremote.password"
    JAVA_OPTS="$JAVA_OPTS -Dcom.sun.management.jmxremote.access.file=<%= get_var(@deploymentdir,/.+/) %>/conf/jmxremote.access"
    JAVA_OPTS="$JAVA_OPTS <%= get_var(@javaopts,/.*/) %>"
fi

DEBUG="<%= get_var(@debug_port,/.+/) %>"
if ( [ "$1" = "start" ] && [ "$DEBUG" = "yes" ] );then
    DEBUG_PORT="<%= get_var(@port_prefix, /\d+/) %><%= get_var(@port_sub_prefix,/^\d+$/) %>000"
    echo "START DEBUG PORT $DEBUG_PORT"
    export JAVA_OPTS="$JAVA_OPTS -Xrunjdwp:transport=dt_socket,address=$DEBUG_PORT,server=y,suspend=n"
fi


# Start of extra lines added setenv_extra
<% @setenv_extra.flatten.each do |entry| -%>
<%= get_var(entry, /.+/) %>
<% end -%>
# End of extra lines added setenv_extra


# Make JAVA_OPTS visible to all child processes
export JAVA_OPTS
